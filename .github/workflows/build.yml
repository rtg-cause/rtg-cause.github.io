# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Build

on:
  # Runs on pushes  targeting the default branch and on pull-requests
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Process and Finalize ICS File
        run: |
          # 1. Read the Jekyll-built file containing placeholders
          RAW_CONTENT=$(cat _site/assets/CAUSE_calendar.ics.liquid)
          
          # 2. Perform the CR+LF and folding replacement using sed.
          #    \r\n is the literal iCalendar line ending.
          #    \r\n[space] is the literal iCalendar folding sequence.
          PROCESSED_CONTENT=$(echo "$RAW_CONTENT" | sed 's/##NEWLINE##/\r\n /g')

          # 3. Write the final, corrected .ics file to the published folder (_site)
          echo "$PROCESSED_CONTENT" > _site/assets/CAUSE_calendar.ics
          
          # 4. Remove the intermediate .liquid file
          rm _site/calendar.ics.liquid
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3
